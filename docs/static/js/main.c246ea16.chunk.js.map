{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAkBhD,OAEE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAOd,4BAAKD,GACL,2BACEQ,KAAK,OACLC,MAAOT,EACPU,SApBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,Y,uBCLdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCDPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIvC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAIrB,yBAAKgB,UAAU,4DACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCLGS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEdd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA4BxC,OArBAC,qBAAU,WAER1B,EAAQC,GACL0B,MAAK,SAAAC,GAEJH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAKd,CAACtB,IASGuB,EDtBmBK,CAAa5B,GAA/BO,EAJ+B,EAI/BA,KAAMe,EAJyB,EAIzBA,QASd,OAPAN,QAAQC,IAAIK,GAQV,oCACE,wBAAIJ,UAAU,uDAAuDlB,GAEpEsB,GAAW,uBAAGJ,UAAU,sDAAb,WAEZ,yBAAKA,UAAU,aAEXX,EAAKE,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACEmB,IAAKnB,EAAIC,IACLD,UEAHoB,EAzBM,WAAO,IAAD,EAEW5C,mBAAS,CAAC,SAFrB,mBAElBQ,EAFkB,KAENT,EAFM,KAIzB,OACE,6BACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEIS,EAAWe,KAAI,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACE6B,IAAK7B,EACLA,SAAUA,U,MCbxB+B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c246ea16.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport const AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories(categories => [inputValue, ...categories]);\n      setInputValue('');\n    }\n  }\n\n  return (\n\n    <form onSubmit={handleSubmit}>\n      <h1>{inputValue}</h1>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n      />\n    </form>\n\n  )\n\n}\n","\n\n\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=HEUf0s0oLOpNd4uSVB8nxoJC5JufpPK6`\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  });\n\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n\n  console.log(id, title, url);\n\n  return (\n\n    <div className=\"card animate__animated animate__fadeIn animate__delay-1s\">\n      <img src={url} alt={title}></img>\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ category }) => {\n\n  // const [images, setImages] = useState([]);\n\n  const { data, loading } = useFetchGifs(category);\n\n  console.log(loading);\n\n  // useEffect(() => {\n  //   getGifs(category)\n  //     .then(setImages)\n  // }, [category])\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn animate__delay-1s\">{category}</h3>\n\n      {loading && <p className=\"animate__animated animate__flash animate__delay-1s\">Loading</p>}\n\n      <div className=\"card-grid\">\n        {\n          data.map(img => (\n            <GifGridItem\n              key={img.id}\n              {...img}\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n\n  const [state, setstate] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n\n    getGifs(category)\n      .then(imgs => {\n\n        setstate({\n          data: imgs,\n          loading: false\n        });\n\n      })\n\n  }, [category])\n\n  // setTimeout(() => {\n  //   setstate({\n  //     data: [1, 2, 3, 4],\n  //     loading: false\n  //   })\n  // }, 3000);\n\n  return state; // { data: [], loading: true }\n\n\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n  const [categories, setCategories] = useState(['Lion']);\n\n  return (\n    <div>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {\n          categories.map(category => (\n            <GifGrid\n              key={category}\n              category={category}\n            />\n          ))\n        }\n      </ol>\n    </div>\n  )\n\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}